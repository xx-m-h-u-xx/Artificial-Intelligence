%%==========================================================================================================================
%% Face Classification using HOG
%% The code below uses Histograms of Oriented Gradient (HOG) features to represent images of faces in a classification problem
%%==========================================================================================================================


if ~isfolder('./FaceDatabaseATT')
    unzip('FaceDatabaseATT.zip');
end

%% Loads the ATT Face Database - placing it in variable faceDatabase
faceDatabase = imageSet('FaceDatabaseATT','recursive');

%% Display Montage of First Face
figure;
montage(faceDatabase(1).ImageLocation);
title('One image of person 1');

%%  Display Query Image and Database Side-Side
personToQuery = 1;
galleryImage = read(faceDatabase(personToQuery),1);
figure;

for i=1:size(faceDatabase,2)
    imageList(i) = faceDatabase(i).ImageLocation(5);
end

subplot(1,2,1);imshow(galleryImage);title('One Image of Person 1');
subplot(1,2,2);montage(imageList);title('Database of all possible identities');
diff = zeros(1,9);

%% Split Database into Training & Test Sets
[training,test] = partition(faceDatabase,[0.8 0.2]);

%% Extract and display Histogram of Oriented Gradient Features for single face 
person = 5;
[hogFeature, visualization]= ...
    extractHOGFeatures(read(training(person),1));

figure;
subplot(2,1,1);imshow(read(training(person),1));title('One Image of Person 5');
subplot(2,1,2);plot(visualization);title('Resulting HOG features');

%% Compares against the first N identities only (to reduce execution time):
% N = size(training,2); % all of them
N = 5; % just some of them

trainingFeatures = zeros(N*training(1).Count,4680);
featureCount = 1;

for i=1:N
    for j = 1:training(i).Count
        trainingFeatures(featureCount,:) = extractHOGFeatures(read(training(i),j));
        trainingLabel{featureCount} = training(i).Description;    
        featureCount = featureCount + 1;
    end
    personIndex{i} = training(i).Description;
end

%% Create an N class classifier using fitcecoc 
faceClassifier = fitcecoc(trainingFeatures,trainingLabel);

%% Tests couple of images for the first 5 people in the testing set
figure;
figureNum = 1;
for person=1:5
    for j = 1:test(person).Count
        queryImage = read(test(person),j);
        queryFeatures = extractHOGFeatures(queryImage);
        personLabel = predict(faceClassifier,queryFeatures);
        
        % Map back to training set to find identity
        booleanIndex = strcmp(personLabel, personIndex);
        integerIndex = find(booleanIndex);
        
        subplot(2,2,figureNum);imshow(imresize(queryImage,3));title('Query Face');
        
        subplot(2,2,figureNum+1);imshow(imresize(read(training(integerIndex),1),3));title('Matched Class');
        figureNum = figureNum+2;
        
    end
    figure;
    figureNum = 1;
end
